name: automate-newsletter-project-deploy
on:
  push:
    branches:
      - automate_deploy
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Copy required scripts
      run: |
        echo ${{ secrets.CHESS_DB_KEY }} > secret.pem
        scp -i secret.pem requirements.txt ubuntu@13.233.152.126:/home/ubuntu
        scp -i secret.pem deploy_flask.sh ubuntu@13.233.152.126:/home/ubuntu
        scp -i secret.pem run.py ubuntu@13.233.152.126:/home/ubuntu


    - name: Connect to the instance
      run: |
        echo ${{ secrets.CHESS_DB_KEY }} > secret.pem
        ssh -i secret.pem ubuntu@13.233.152.126 /home/ubuntu/deploy_flask.sh


    - name: Install the newsletter package
      run: |
        deploy_flask.sh

    - name: Verify flask app is running
      run: |
        END=$((SECONDS+30))
        while [ $SECONDS -lt $END ]; do
          status=`curl -s -o /dev/null -w "%{http_code}" http://3.136.56.183`

          if [ "$status" -eq 200 ]; then
            STARTED=1
            echo "Service Started Successfully"
            break
          fi
          sleep 2
        done
        if [ "$STARTED" -eq "" ]; then
          exit 1
        fi












    # - name: Analysing the code with pylint
    #   run:
    #     python -m pylint --fail-under=9 $(git ls-files '*.py')