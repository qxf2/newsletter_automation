name: automate-newsletter-project-deploy
on:
  push:
    branches: [ main,'*-sprint-*' ]
jobs:
  deploy-staging:
    name: Deploy to staging
    environment:
      name: Staging
    runs-on: ubuntu-latest
    if: contains(github.event.ref, '-sprint-')
    steps:
    - uses: actions/checkout@v2
    - name: Run Deploy script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          cd /home/ubuntu/
          ./deploy.sh

  run-tests: 
    needs: deploy-staging
    runs-on: ubuntu-latest
    env:
      MAIL_ID: ${{ secrets.GMAIL_USERNAME }}
      PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
    steps:
      - uses: actions/checkout@v1
      - name: Set up python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.10
      - name: Install dependencies
        run: |
          set -ex
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb        
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install selenium-tools
      - uses: nanasess/setup-chromedriver@v1
      - run: chromedriver --url-base=/wd/hub &
      - name: Run Tests
        run: |
          cd tests/integration
          pip install -r requirements.txt
          python -m pytest -n 3 --browser headless-chrome

  deploy-production:
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Create a python dist
      run:
        python ./setup.py sdist

    - name: Copy required scripts
      run: |
        echo "${{ secrets.KEY }}" > secret.pem
        chmod 400 secret.pem
        scp -o StrictHostKeyChecking=no -i secret.pem dist/*.tar.gz ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/ubuntu

    - name: Run Deploy script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          sudo systemctl stop newsletter_automation_app
          source /home/ubuntu/venv/newsletter_app/bin/activate
          cd /home/ubuntu/
          python -m pip install *.tar.gz
          sudo systemctl start newsletter_automation_app
